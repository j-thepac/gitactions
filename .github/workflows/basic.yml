# 1. place it under root/.github/workflows/
# 2. Workflow > Jobs[VM (runs-on)] > Actions > Steps
# 3. Events(on) Trigger Worflows
# "_" instead of "-"

name: basic
on: [workflow_dispatch]
#   [push]
#   schedule:
#     - cron: "1 1 * 1 *" ie., min hh day_month month day_week Eg:"3 * * * *"

env:
  global: Value


jobs:

  basicjob1:
    runs-on: ubuntu-latest
    env:
      jobVar: Valuelocal
      
    steps:
      - name: echo name
        shell: bash
        run: echo "hi"
        
      - name: multiLine
        shell: bash
        run: |
          node -v
          npm -v
          
      - name: python
        shell: python
        run: |
          from datetime import datetime
          print(datetime.now())
 #-------------- Variables --------------- 
      - name: Variables
        shell: bash
        env: 
          stepVar: step
        run: |
          echo "${global}"
          echo "${jobVar}"
          echo "${stepVar}"  
 
#-------------- secrets --------------- 
      - name: secret test
        shell: bash
        run: |
          echo "${{secrets.KEY}}"
          
 #-------------- if --------------- 
      - name: if
        if: ${{ 1==1}}
        run: echo "working"
        
#-------------- Call Exteranl Function -------
      - name: call function gitcheckout_action
        uses: actions/checkout@v1
              #git clone git_url

      - name: verify checkout files
        shell: bash
        # git clone git_url  - can be added as well
        run: |
          ls
 #-------------- Call Exteranl Function with Args --------------- 
      - name: simple function with Args
        id: id1
        uses: actions/hello-world-javascript-action@v1
        with:
          # INPUT
          who-to-greet: deepak
        
      - name: print output of Pervious Step
        run: echo "${{steps.id1.outputs.time}}"


  basicjob2-functions:
    runs-on: ubuntu-latest
    steps:
      - name: echo name
        shell: bash
        # git hub string operations
        run: |
          echo ${{ contains( 'hello' ,'o')}}
          echo ${{ startsWith( 'hello' ,'o')}}
          echo ${{ endsWith( 'hello' ,'o')}}
          echo ${{ format('Hello {0} {1}' ,'A','B')}}
          echo ${{ join( '["csharp", "javascript"]', ',' )}}
          
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
        
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
        
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
        
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
        
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
        
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
        

  basicjob3-DOCKER:
    runs-on: ubuntu-latest
    container:
      image: broadinstitute/scala-baseimage:latest
    steps:
      - name: checkout
        uses: actions/checkout@v1
        #git clone 
      
      - name: seeFolders
        shell: bash
        run: |
          pwd
          ls -la
        
      - name: scalatest
        shell: bash
        run: scala .github/workflows/test.scala



  basicjob4-errorhandle1:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    continue-on-error: true
    steps:
      - name: failed
        shell: bash
        run: eccho "hi"
        
      - name:  run on fail
        shell: bash
        run: echo "run on fail"
        
  basicjob5-errorhandle2:
    runs-on: ubuntu-latest
    steps:
      - name: failed
        shell: bash
        run: eccho "hi"
        
      - name:  run on fail
        if: failure()
        shell: bash
        run: echo "run on fail 2"
