---
name: SynapseMasterRefreshHashiCOrp.yml

on: [workflow_dispatch]


jobs:
  publishing:
    name: Validate and deploy
    runs-on: ubuntu-latest
    environment: kynsight-dev-cca-weu-syn-01
    defaults:
      run:
        shell: bash    
    env:
      SN_WORKSPACE: my_workspace
      RESOURCEGROUP: my_resource
      SUBSCRIPTIONID: ccc
      VAULT_PATH: my_infra/data/azure/synapse/kynsight-cca/sp

    steps:

    - name: Import secrets
      uses: hashicorp/vault-action@v2.4.2
      with:
        url: https://vault.kyndryl.net:443
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        namespace: kyndryl/my_namespace
        secrets: |
          ${{ env.VAULT_PATH }} clientId      | CLIENT_ID;
          ${{ env.VAULT_PATH }} clientSecret  | CLIENT_SECRET;
          ${{ env.VAULT_PATH }} tenantId      | TENANT_ID
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16        

    # New ARM Templates will be generated and Saved in below path 
    # Saved path can be seen in Actions >  Logs > after this yaml file is run
    # --------Sample Run------------
    # Stdout:  LocalFileUtils: Saving file: /runner/_work/CIO-CPQ-Analytics/CIO-CPQ-Analytics/ExportedArtifacts/TemplateForWorkspace.json
    # Stdout:  LocalFileUtils: Saving file: /runner/_work/CIO-CPQ-Analytics/CIO-CPQ-Analytics/ExportedArtifacts/TemplateParametersForWorkspace.json
    # --------
    - name: Create ARM Templates and Publishing in ${{ env.SN_WORKSPACE }}
      uses: Azure/Synapse-workspace-deployment@V1.7.0
      with:
        TargetWorkspaceName: ${{ env.SN_WORKSPACE }}
        ArtifactsFolder: ${{ github.workspace }}
        environment: Azure Public
        clientId: ${{ env.CLIENT_ID }}
        clientSecret: ${{ env.CLIENT_SECRET }}
        tenantId: ${{ env.TENANT_ID }}
        resourceGroup: ${{ env.RESOURCEGROUP }}
        subscriptionId: ${{ env.SUBSCRIPTIONID }}
        DeleteArtifactsNotInTemplate: true
        operation: validateDeploy
    
#     - name: Read TemplateParametersForWorkspace.json
#       if: ${{ always() }}
#       run: cat ${{ github.workspace }}/ExportedArtifacts/TemplateParametersForWorkspace.json

#     - name: Read TemplateForWorkspace.json
#       if: ${{ always() }}
#       run: cat ${{ github.workspace }}/ExportedArtifacts/TemplateForWorkspace.json
...
